import type { Metadata } from "next";
import { Geist } from "next/font/google";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import { ThemeProvider } from "@mui/material/styles";
import RSS from "rss";
import path from "path";
import { writeFile } from "node:fs/promises";

import theme from "../theme";
import { LOCALES } from "@/constant";
import { getDictionary, Locale } from "@/locales/dictionaries";
import { getAllPosts } from "@/lib/post";
import { Box, GlobalStyles } from "@mui/material";
import { globalStyle } from "@/style";

const geistSans = Geist({
  variable: "--font-geist-sans",
  weight: ["300", "400", "500", "700"],
  display: "swap",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function generateRss() {
  const posts = await getAllPosts();

  for (const locale of LOCALES) {
    const dictionary = await getDictionary(locale as Locale);
    const options = {
      title: dictionary["home"]["hi"],
      description: dictionary["home"]["description"],
      feed_url: `https://seungwonan.com/rss_${locale}.xml`,
      site_url: `https://seungwonan.com/${locale}`,
      language: locale,
      pubDate: new Date(),
    };
    const feed = new RSS(options);

    posts.forEach((post) => {
      if (post.locale === locale) {
        feed.item({
          title: post.title,
          description: post.summary,
          url: `https://seungwonan.com/${post.locale}/blog/${post.slug}`,
          date: post.date,
          author: "Seungwon An (Harry)",
        });
      }
    });

    const fullFilePath = path.join(
      process.cwd(),
      "public",
      `rss_${locale}.xml`,
    );

    try {
      await writeFile(fullFilePath, feed.xml({ indent: true }));
    } catch (error) {
      console.error("Error: ", error);
    }
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  await generateRss();

  return (
    <html lang="en">
      <body className={geistSans.className}>
        <AppRouterCacheProvider>
          <ThemeProvider theme={theme}>
            <GlobalStyles styles={globalStyle} />
            <Box
              sx={{
                height: "100%",
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
              }}
            >
              {children}
            </Box>
          </ThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
